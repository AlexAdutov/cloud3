/*
Этот код определяет компонент PrivateRoutes, который используется для защиты маршрутов в вашем приложении. Вот краткое описание его функционала:
PrivateRoutes - это функциональный компонент, который принимает два пропса:
isAllowed: логическое значение, указывающее, разрешен ли доступ к защищенным маршрутам. Если true, компонент Outlet (дочерние маршруты) отрисуется, иначе произойдет перенаправление.
redirectPath (необязательный): путь для перенаправления в случае, если доступ не разрешен. По умолчанию это корневой путь '/'.
Если isAllowed равен true, компонент отрисует содержимое дочерних маршрутов, представленное компонентом Outlet.
Если isAllowed равен false, компонент выполняет перенаправление на путь, указанный в redirectPath, используя компонент Navigate.
Параметр replace в Navigate указывает, что при перенаправлении будет использован метод замены истории браузера, а не добавления новой записи истории.
Например, если isAllowed равен false, пользователь будет перенаправлен на указанный путь, который обычно является пути для входа или авторизации, чтобы получить доступ к защищенным маршрутам.
*/
import { Navigate, Outlet } from 'react-router-dom'

const PrivateRoutes = ({isAllowed, redirectPath = '/'}) => {
  return isAllowed ? <Outlet /> : <Navigate to={redirectPath} replace />
}

export default PrivateRoutes